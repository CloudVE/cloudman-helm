apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ template "cloudman.fullname" . }}-prom-rules
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "cloudman.name" . }}
    chart: {{ template "cloudman.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  groups:
  - name: cloudman-scaling
    rules:
    - alert: ClusterOverUtilized
      annotations:
        message: Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
      # If CPU request commitment is more than 100% or
      # CPU usage is > 70% for 2m
      expr: |-
        (
        sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum)
          /
        sum(kube_node_status_allocatable_cpu_cores)
          > 1
        )
        or
        (
          (1 - avg(rate(node_cpu_seconds_total{mode="idle"}[2m]))) > 0.9
        )
      for: 2m
      labels:
        severity: warning
    - alert: ClusterOverUtilized
      annotations:
        message: Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememovercommit
      # If memory request commitment is more than 100% or
      # memory usage exceeds 70%
      expr: |-
        (
          sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum)
            /
          sum(kube_node_status_allocatable_memory_bytes)
            > 1
        )
        or
        (
          (1 - sum(:node_memory_MemAvailable_bytes:sum)
            /
           sum(kube_node_status_allocatable_memory_bytes))
            > 0.9
        )
      for: 2m
      labels:
        severity: warning
    - alert: ClusterUnderUtilized
      annotations:
        message: Cluster is underutilizing resources (<70% committed and <50% used)
      # If CPU and memory request commitments < 70%
      # and usage is < 50%
      expr: |-
        (
          sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum)
            /
          sum(kube_node_status_allocatable_cpu_cores)
            < 0.7
        )
        and
        (
          (1 - avg(rate(node_cpu_seconds_total{mode="idle"}[5m]))) < 0.5
        )
        and
        (
          sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum)
            /
          sum(kube_node_status_allocatable_memory_bytes)
            <  0.7
        )
        and
        (
          (1 - sum(:node_memory_MemAvailable_bytes:sum)
            /
           sum(kube_node_status_allocatable_memory_bytes))
            < 0.5
        )
      for: 5m
      labels:
        severity: warning
    - alert: PodNotSchedulable
      annotations:
        cpus: '{{ $labels.cpus }}'
        memory: '{{ $labels.memory }}'
        message: Cluster has unschedulable pods due to insufficient CPU or memory
      expr: |-
        topk by () (1, kube_pod_container_resource_requests_cpu_cores
                       * on(pod) group_left(cpus) count_values("cpus", kube_pod_container_resource_requests_cpu_cores) by (pod)
                       and on(pod) kube_pod_status_unschedulable)
        * on () group_left(memory)
        topk by () (1, kube_pod_container_resource_limits_memory_bytes
                       * on(pod) group_left(memory) count_values("memory", kube_pod_container_resource_limits_memory_bytes) by (pod)
                       and on(pod) kube_pod_status_unschedulable)
      for: 1m
      labels:
        severity: warning
