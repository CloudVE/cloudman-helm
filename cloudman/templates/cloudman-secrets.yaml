apiVersion: v1
kind: Secret
metadata:
  name: {{ template "cloudman.fullname" . }}-secret
  labels:
    app: {{ template "cloudman.name" . }}
    chart: {{ template "cloudman.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
type: Opaque
stringData:
  bootstrap.sh: |
    /app/venv/bin/python manage.py import_cloud_data /app/secrets/cm_initial_cluster_data.yaml
    /app/venv/bin/python manage.py create_cluster {{ .Values.global.deployment_name | default .Release.Name }} KUBE_RANCHER /app/secrets/cm_initial_cluster_data.yaml
    {{$message := "`prometheus.alertmanager.config.global.http_config.basic_auth.password` is a required value"}}
    /app/venv/bin/python manage.py create_autoscale_user --impersonate_account admin --username {{ .Values.prometheus.alertmanager.config.global.http_config.basic_auth.username }} --password {{ required $message .Values.prometheus.alertmanager.config.global.http_config.basic_auth.password }}
    /app/venv/bin/python manage.py projman_load_config /opt/cloudman/projman_config.yaml
    /app/venv/bin/python manage.py helmsman_load_config /opt/cloudman/helmsman_config.yaml
  cm_initial_cluster_data.yaml: |
{{ include "cloudman.cluster_config" . | indent 4 }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Release.Name }}-postgres-keycloak-password
  labels:
    app.kubernetes.io/name: {{ include "cloudman.name" . }}
    helm.sh/chart: {{ include "cloudman.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    # xref: https://github.com/helm/helm/issues/3053
    # xref: https://github.com/helm/helm/pull/5290
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  postgres-keycloak-password: {{ include "cloudman.dbKeycloakPassword" . | b64enc | quote }}
---
{{- if not .Values.keycloak.keycloak.password }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Release.Name }}-keycloak-http
  labels:
    app.kubernetes.io/name: {{ include "cloudman.name" . }}
    helm.sh/chart: {{ include "cloudman.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    # xref: https://github.com/helm/helm/issues/3053
    # xref: https://github.com/helm/helm/pull/5290
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  {{ default "password" .Values.keycloak.keycloak.existingSecretKey }}: {{ include "cloudman.httpKeycloakPassword" . | b64enc | quote }}
{{- end -}}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Release.Name }}-keycloak-initdb
  labels:
    app.kubernetes.io/name: {{ include "cloudman.name" . }}
    helm.sh/chart: {{ include "cloudman.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
stringData:
  {{- $root := . }}
  {{ range $path, $bytes := .Files.Glob "data/keycloak_initdb.sh" }}
    {{- base $path }}: {{ tpl ($root.Files.Get $path) $ | quote }}
  {{ end }}
---
