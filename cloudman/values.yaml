# CloudMan has the same dependencies and structure as cloudlaunch,
# and only differs in the container images.

admin_firstname: "CloudMan"
admin_lastname: "Admin"
admin_email: "cloudman@someplace.org"

helmsman_config:
  repositories:
     - name: cloudve
       url: https://raw.githubusercontent.com/CloudVE/helm-charts/master/
  charts:
     - name: cloudve/galaxy-cvmfs-csi
       namespace: cvmfs
     - name: cloudve/galaxy
       namespace: galaxy
       values:
         persistence:
           storageClass: nfs-provisioner
         postgresql:
           persistence:
             storageClass: ebs-provisioner
         container-mapper-rules.yml: |
           mappings:
             - tool_ids:
                 - sort1
               container:
                 docker_container_id_override: {{ .Values.image.repository }}:{{ .Values.image.tag }}
             - tool_ids:
                 - toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72
               container:
                 docker_container_id_override: quay.io/biocontainers/fastqc:0.11.8--1
             - tool_ids:
                 - Grouping1
               container:
                 docker_container_id_override: galaxy/galaxy:19.05

#    version:

# CloudMan bootstrap data
cm_initial_cluster_data:
rancher_url:
rancher_api_key:
rancher_cluster_id:
rancher_project_id:

# Special global values which are accessible from all charts
global:
    domain: 192.168.99.100

cloudlaunch:
  nameOverride: cloudman
  container_name: cloudman-ui
  image:
    repository: cloudve/cloudman-ui
    tag: latest

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - ~
    tls: []

  cloudlaunch-server:
    nameOverride: cloudman
    container_name: cloudman-server
    image:
      repository: cloudve/cloudman-server
      tag: latest
    env_prefix: CLOUDMAN
    celery_app_name: cloudman
    django_settings_module: cloudman.settings
    django_dir: /app/cloudman
    initial_data: []
    extra_init_scripts:
      load_bootstrap.sh: |
        #!/bin/sh
        /app/venv/bin/python manage.py import_cloud_data /app/secrets/cm_initial_cluster_data.yaml
        /app/venv/bin/python manage.py create_cluster default KUBE_RANCHER /app/secrets/cm_initial_cluster_data.yaml
    extra_config_mounts:
      - name: cloudman-extra-config
        mount_path: /opt/cloudman/
        config_name: '{{ template "cloudman.fullname" . }}-helmsman-config'
        read_only: true
    extra_secret_mounts:
      - name: cloudman-bootstrap
        mount_path: /app/secrets
        secret_name: '{{ template "cloudman.fullname" . }}-secret'
        read_only: true
    extra_env:
      oidc_enabled: "True"
      oidc_auth_uri: "{{.Values.ingress.protocol }}://{{ .Values.global.domain | default (index .Values.ingress.hosts 0) }}/auth/realms/master"
      oidc_client_id: "cloudman"
      oidc_public_uri: "{{.Values.ingress.protocol }}://{{ .Values.global.domain | default (index .Values.ingress.hosts 0) }}/cloudman"
    postgresql:
      enabled: true
      postgresDatabase: cloudman
      postgresUser: cloudman
      postgresPassword: some_pass
    ingress:
      enabled: true
      path: /cloudman
      hosts:
        - ~
      protocol: https
keycloak:
  persistence:
    deployPostgres: false

  keycloak:
    username: admin
    password: changeMe

    ingress:
      enabled: true
      # Add a null host to default to IP
      hosts:
        - ~
      path: /auth
    persistence:
      deployPostgres: false
      dbVendor: H2

    extraVolumes: |
      - name: realm-data
        configMap:
          name: '{{ template "keycloak_data.name" . }}-realm-data'

    extraVolumeMounts: |
      - name: realm-data
        mountPath: "/realm/"
        readOnly: true

    extraArgs: >
      -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile
      -Dkeycloak.migration.file=/realm/realm.json -Dkeycloak.migration.strategy=IGNORE_EXISTING

prometheus:
  grafana:
    ingress:
      domain: "{{ .Values.global.domain }}"
