# CloudMan has the same dependencies and structure as cloudlaunch,
# and only differs in the container images.

admin_firstname: "CloudMan"
admin_lastname: "Admin"
admin_email: "cloudman@someplace.org"

projman_config:
  projects:
    - name: gvl

helmsman_config:
  repositories:
     - name: cloudve
       url: https://raw.githubusercontent.com/CloudVE/helm-charts/master/
     - name: jupyterhub
       url: https://jupyterhub.github.io/helm-chart/
  charts:
    dashboard:
      name: stable/kubernetes-dashboard
      namespace: kube-system
      values:
        rbac:
          clusterAdminRole: true
        ingress:
          enabled: true
          hosts:
            - ~
          paths:
            - /dashboard
            - /dashboard/*
        enableInsecureLogin: true
    cvmfs:
      name: cloudve/galaxy-cvmfs-csi
      namespace: cvmfs
    galaxy:
      name: cloudve/galaxy
      namespace: gvl
      oidc_client:
        client_id: 'galaxy-auth'
        # The client secret is required if the client is not public
        public_client: false
        #client_secret: 'cf84xfps-npm5-hvmb-ntui4grybqrh'
        redirect_uris:
          - '{{ include "cloudman.root_url" . }}/authnz/custos/callback'
      # tplValues get processed by the templating engine of the Cloudman helm chart
      # The resulting map is then merged with the map of values below, and passed to the application's chart
      tplValues:
        config:
          oidc_backends_config.xml: |
            <?xml version="1.0"?>
            <OIDC>
                <provider name="custos">
                    <url>{{ include "cloudman.root_url" . }}/auth</url>
                    <client_id>{{ .Values.helmsman_config.charts.galaxy.oidc_client.client_id }}</client_id>
                    <client_secret>{{ .Values.helmsman_config.charts.galaxy.oidc_client.client_secret }}</client_secret>
                    <redirect_uri>{{ include "cloudman.root_url" . }}/authnz/custos/callback</redirect_uri>
                    <realm>master</realm>
                </provider>
            </OIDC>
      # Unlike tpl values, these values are not passed through the templating engine of the Cloudman helm chart
      # i.e.: {{ .Values.postgresql.enabled }} in one of the values below will go as a string in the
      # values.yml file passed to the child chart. If the application's chart passes the specific value through
      # the tpl engine, it will be evaluated at that point from the resulting values for that chart, irrespective of the
      # values in the Cloudman chart.
      values:
        image:
          repository: galaxy/galaxy-k8s
          tag: 19.09-dev
        config:
          galaxy.yml:
            galaxy:
              enable_oidc: true
              oidc_config_file: /galaxy/server/config/oidc_config.xml
              oidc_backends_config_file: /galaxy/server/config/oidc_backends_config.xml
          oidc_config.xml: |
            <?xml version="1.0"?>
            <OIDC>
                <Setter Property="VERIFY_SSL" Value="False" Type="bool"/>
                <Setter Property="REQUESTS_TIMEOUT" Value="3600" Type="float"/>
                <Setter Property="ID_TOKEN_MAX_AGE" Value="3600" Type="float"/>
            </OIDC>
        persistence:
          storageClass: nfs-provisioner
        postgresql:
          persistence:
            storageClass: ebs-provisioner
        ingress:
          path: /gvl/galaxy

#    version:

# CloudMan bootstrap data
cm_initial_cluster_data:
rancher_url:
rancher_api_key:
rancher_cluster_id:
rancher_project_id:

# Special global values which are accessible from all charts
global:
    domain: 192.168.99.100

cloudlaunch:
  nameOverride: cloudman
  container_name: cloudman-ui
  image:
    repository: cloudve/cloudman-ui
    tag: latest

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - ~
    tls: []

  cloudlaunchserver:
    nameOverride: cloudman
    container_name: cloudman-server
    image:
      repository: cloudve/cloudman-server
      tag: latest
    env_prefix: CLOUDMAN
    celery_app_name: cloudman
    django_settings_module: cloudman.settings
    django_dir: /app/cloudman
    initial_data: []
    extra_init_scripts:
      load_bootstrap.sh: |
        #!/bin/sh
        /app/venv/bin/python manage.py import_cloud_data /app/secrets/cm_initial_cluster_data.yaml
        /app/venv/bin/python manage.py create_cluster default KUBE_RANCHER /app/secrets/cm_initial_cluster_data.yaml
        /app/venv/bin/python manage.py helmsman_load_config /opt/cloudman/helmsman_config.yaml
        /app/venv/bin/python manage.py projman_load_config /opt/cloudman/projman_config.yaml
    extra_config_mounts:
      - name: cloudman-extra-config
        mount_path: /opt/cloudman/
        config_name: '{{ template "cloudman.fullname" . }}-cm-init-config'
        read_only: true
    extra_secret_mounts:
      - name: cloudman-bootstrap
        mount_path: /app/secrets
        secret_name: '{{ template "cloudman.fullname" . }}-secret'
        read_only: true
    extraInitContainers:
      - name: post-install-job
        image: "gempesaw/curl-jq"
        command: ["/bin/sh", "/kc-init/update_keycloak.sh"]
        volumeMounts:
          - name: kc-init
            mountPath: /kc-init
            readOnly: true
    # TODO: include release name in configmap name
    extraVolumes: |
      - name: kubeconfig
        emptyDir: {}
      - name: kc-init   
        configMap:   
          name: kc-init-script  
    extraVolumeMounts: |
      - name: kubeconfig
        mountPath: /home/cloudman
    extra_env:
      oidc_enabled: "True"
      oidc_auth_uri: "{{.Values.ingress.protocol }}://{{ .Values.global.domain | default (index .Values.ingress.hosts 0) }}/auth/realms/master"
      oidc_client_id: "cloudman"
      oidc_public_uri: "{{.Values.ingress.protocol }}://{{ .Values.global.domain | default (index .Values.ingress.hosts 0) }}/cloudman"
    postgresql:
      enabled: true
      postgresDatabase: cloudman
      postgresUser: cloudman
      postgresPassword: some_pass
    ingress:
      enabled: true
      path: /cloudman
      hosts:
        - ~
      protocol: https

keycloak:
  keycloak:
    username: admin
    password: changeMe
    ingress:
      enabled: true
      # Add a null host to default to IP
      hosts:
        - ~
      path: /auth
    persistence:
      deployPostgres: false
      dbVendor: H2 
    extraVolumes: |
      - name: theme
        emptyDir: {}

    extraVolumeMounts: |
      - name: theme
        mountPath: /opt/jboss/keycloak/themes/keycloak

    extraInitContainers: |
      - name: theme-provider
        image: cloudve/gvl-keycloak-theme:latest
        imagePullPolicy: IfNotPresent
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying theme..."
            cp -R /gvltheme/* /theme
            echo "done."
        volumeMounts:
          - name: theme
            mountPath: /theme

prometheus:
  grafana:
    ingress:
      domain: "{{ .Values.global.domain }}"
